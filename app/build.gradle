plugins {
	id 'application'
	id 'checkstyle'
	id 'jacoco'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.liquibase.gradle' version '2.2.0'
	id 'com.adarshr.test-logger' version '3.2.0'
	id 'org.siouan.frontend-jdk11' version '6.0.0'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'

java {
	sourceCompatibility = '20'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor(
			'org.projectlombok:lombok',
			'com.querydsl:querydsl-apt:5.0.0:jakarta',
			'jakarta.persistence:jakarta.persistence-api:3.1.0'
	)

	implementation(
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-validation',
			'org.springframework.boot:spring-boot-starter-actuator',
			'org.springframework.boot:spring-boot-starter-security',
			'org.liquibase:liquibase-core',
			'com.querydsl:querydsl-jpa:5.0.0:jakarta',
			'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0',
			'io.jsonwebtoken:jjwt:0.9.1'
	)

	liquibaseRuntime(
			sourceSets.main.output,
			'org.liquibase:liquibase-core',
			'info.picocli:picocli:4.7.4',
			'org.liquibase.ext:liquibase-hibernate6:4.23.1',
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'com.h2database:h2',
	)

	runtimeOnly(
			'com.h2database:h2',
			'org.postgresql:postgresql'
	)

	testImplementation(
			'org.springframework.boot:spring-boot-starter-security',
			'org.springframework.security:spring-security-test',
			'org.springframework.boot:spring-boot-starter-test'
	)
}

application {
	mainClass = 'hexlet.code.AppApplication'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}

diffChangelog {
	dependsOn compileJava
}

liquibase {
	activities {
		main {
			changelogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
			url 'jdbc:h2:./taskManager'
			referenceUrl 'hibernate:spring:hexlet.code.model.' +
					'?dialect=org.hibernate.dialect.H2Dialect' +
					'&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy'
		}
	}
}

frontend {
	nodeVersion = '16.13.1'
	installScript = 'install'
	assembleScript = 'run build'
	packageJsonDirectory = file("${projectDir}/frontend")
}

def configFrontendTasks = {
	inputs.files(fileTree("$projectDir/frontend").exclude('build', 'node_modules'))
	outputs.dir("$buildDir/resources/main/static")
}

assembleFrontend {
	configure configFrontendTasks

	doLast {
		copy {
			from "$projectDir/frontend/build"
			into "$buildDir/resources/main/static"
		}
	}
}

installFrontend {
	configure configFrontendTasks
}

processResources.dependsOn assembleFrontend